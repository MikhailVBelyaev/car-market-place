services:
  django:
    build:
      context: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
      - databricks_data:/app/databricks/data
    ports:
      - "8000:8000"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 10s
      timeout: 3s
      retries: 10

  tg_bot:
    build:
      context: ./tg_bot
    env_file:
      - ./tg_bot/.env
    restart: always

  cron:
    build:
      context: ./backend
    command: >
      sh -c "
      echo 'ðŸ•’ Waiting for Django...';
      until curl -s http://django:8000/ > /dev/null; do
        sleep 2;
      done;
      echo 'âœ… Django is up';
      while true; do
        python run_task_lacetti_white.py;
        sleep 3600;
      done"
    volumes:
      - ./backend:/app
      - databricks_data:/app/databricks/data
    restart: always
    depends_on:
      - django

  databricks:
    image: python:3.12-slim
    volumes:
      - databricks_data:/app/databricks/data
    working_dir: /app/databricks/data
    command: tail -f /dev/null

volumes:
  databricks_data:
